import{define}from"./node_modules/xtal-latx/define.js";const spKey="__xtal_deco_onPropsChange";export class XtalDeco extends HTMLElement{static get is(){return"xtal-deco"}connectedCallback(){this.style.display="none";this.getElement("_nextSibling",t=>t.nextElementSibling);this.getElement("_script",t=>t.querySelector("script"))}attachBehavior(evalObj,target){for(const topKey in evalObj){const subObj=evalObj[topKey];switch(topKey){case"on":for(const key in subObj){const handlerKey=key+"_decoHandler",prop=Object.defineProperty(target,handlerKey,{enumerable:!1,configurable:!0,writable:!0,value:subObj[key]});target.addEventListener(key,target[handlerKey])}break;case"props":for(const key in subObj){const propVal=subObj[key];Object.defineProperty(target,key,{get:function(){return this["_"+key]},set:function(val){this["_"+key]=val;const newEvent=new CustomEvent(key+"-changed",{detail:{value:val},bubbles:!0,composed:!1});this.dispatchEvent(newEvent);if(this[spKey])this[spKey](key,val)},enumerable:!0,configurable:!0});target[key]=propVal}break;case"setters":for(const key in subObj){const propVal=subObj[key];target[key]=propVal}break;default:switch(typeof subObj){case"function":const fnKey="onPropsChange"===topKey?spKey:topKey,prop=Object.defineProperty(target,fnKey,{enumerable:!1,configurable:!0,writable:!0,value:subObj});break;case"object":target[topKey]=subObj;break;}}}}getElement(fieldName,getter){this[fieldName]=getter(this);if(!this[fieldName]){setTimeout(()=>{this.getElement(fieldName,getter)});return}this.onDecoPropsChange()}evaluateCode(scriptElement,target){const evalObj=eval(scriptElement.innerHTML);this.attachBehavior(evalObj,target);this._nextSibling.removeAttribute("disabled")}onDecoPropsChange(){if(!this._nextSibling||!this._script)return;this.evaluateCode(this._script,this._nextSibling)}}define(XtalDeco);