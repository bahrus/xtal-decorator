import{XtalDeco}from"./xtal-deco.js";import{define}from"./node_modules/xtal-latx/define.js";import{XtallatX}from"./node_modules/xtal-latx/xtal-latx.js";import{cd}from"./node_modules/xtal-shell/cd.js";export function qsa(css,from){return[].slice.call((from?from:this).querySelectorAll(css))}const into_next_element="into-next-element",import_template="import-template",attach_script="attach-script";export class XtalDecor extends XtallatX(XtalDeco){static get is(){return"xtal-decor"}get intoNextElement(){return this._intoNextElement}set intoNextElement(val){this.attr(into_next_element,val,"")}get importTemplate(){return this._importTemplate}set importTemplate(val){this.attr(import_template,val,"")}get attachScript(){return this._attachScript}set attachScript(val){this.attr(attach_script,val,"")}static get observedAttributes(){return super.observedAttributes.concat([into_next_element,import_template,attach_script])}attributeChangedCallback(name,oldVal,newVal){super.attributeChangedCallback(name,oldVal,newVal);switch(name){case import_template:this._importTemplate=null!==newVal;break;case attach_script:this._attachScript=null!==newVal;break;case into_next_element:this._intoNextElement=null!==newVal;break;}this.onDecoPropsChange()}connectedCallback(){this._upgradeProperties(["disabled","attachScript","importTemplate","intoNextElement","whereCSSMatches"]);this._connected=!0;this.onDecoPropsChange();this.addMutationObserver()}disconnectedCallback(){if(this._mutationObserver)this._mutationObserver.disconnect()}do(){this.appendTemplates();this.attachScripts()}addMutationObserver(){this._mutationObserver=new MutationObserver(()=>{this.getTemplatesAndScripts();this.do()});this.getTemplatesAndScripts();this.do();this._mutationObserver.observe(this,{childList:!0})}getTemplatesAndScripts(){this._templates=qsa("template",this);this._scripts=qsa("script",this)}onDecoPropsChange(){if(!this._connected||this.disabled)return;if(this._intoNextElement&&!this._nextSibling){this.getElement("_nextSibling",t=>t.nextElementSibling);return}this.do()}appendTemplates(target){if(!this._templates)return;if(!target&&this._intoNextElement)target=this._nextSibling;if(this._importTemplate&&target){customElements.whenDefined(target.tagName.toLowerCase()).then(()=>{this._templates.forEach(template=>{if(template.dataset.xtalTemplInserted)return;let subTarget=target;const path=template.dataset.path;if(path){subTarget=cd(target,path)}const clone=document.importNode(template.content,!0);subTarget.shadowRoot.appendChild(clone);template.dataset.xtalTemplInserted="true"})})}}doScripts(target){this._scripts.forEach(script=>{if(script.dataset.xtalScriptAttached)return;let subTarget=target;const path=script.dataset.path;if(path){subTarget=cd(target,path)}this.evaluateCode(script,subTarget)})}attachScripts(target){if(!this._scripts)return;if(!target&&this._intoNextElement)target=this._nextSibling;if(this._attachScript&&target){const ln=target.localName;if(-1<ln.indexOf("-")){customElements.whenDefined(target.tagName.toLowerCase()).then(()=>{this.doScripts(target)})}else{this.doScripts(target)}}}}XtalDecor._addedNodeInsertionStyle=!1;define(XtalDecor);