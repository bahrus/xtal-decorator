(function(){class XtalDecorator extends HTMLElement{constructor(){super(...arguments);this._CssSelector="dom-bind";this._minElementCount=1;this._retries=0}static get is(){return"xtal-decorator"}set validateTargets(val){if(val){this.setAttribute("validate-targets","")}else{this.removeAttribute("validate-targets")}}set targetValidator(val){this._targetValidator=val}static get observedAttributes(){return["selector","min-element-count","validate-targets"]}attributeChangedCallback(name,oldValue,newValue){switch(name){case"selector":this._CssSelector=newValue;break;case"min-element-count":this._minElementCount=parseInt(newValue);break;case"validate-targets":this._validateTargets=null!==newValue;break;}}disconnectedCallback(){this._domObserver.disconnect()}getShadowSubTargets(targets,selector){const newTargets=[];targets.forEach(target=>{const shadowRoot=target.shadowRoot;if(!shadowRoot)return;const targets1=shadowRoot.querySelectorAll(selector),childTargets=[].slice.call(targets1);childTargets.forEach(childTarget=>newTargets.push(childTarget))});return newTargets}getHost(){let parentElement=this.parentElement;while(parentElement){if(parentElement.shadowRoot)return parentElement;parentElement=parentElement.parentElement}}getTargets(){switch(this._CssSelector){case"_host":const host=this.getHost();return host?[host]:null;default:const shadowSplitSelector=this._CssSelector.split(">>>");let targets=[].slice.call(this.parentElement.querySelectorAll(shadowSplitSelector[0]));for(let i=1,ii=shadowSplitSelector.length;i<ii;i++){targets=this.getShadowSubTargets(targets,shadowSplitSelector[i])}return targets;}}applyScript(scriptTag,targets){if(!scriptTag)return;const innerText=scriptTag.innerText;if(innerText===this._previousEvaluatedText)return;const objectsToMerge=eval(innerText);this._previousEvaluatedText=innerText;let propertiesToSet;for(let j=0,jj=objectsToMerge.length;j<jj;j++){const objectToMerge=objectsToMerge[j];for(var key in objectToMerge){const val=objectToMerge[key];switch(typeof val){case"function":targets.forEach(target=>{Object.defineProperty(target,key,{enumerable:!1,configurable:!0,writable:!0,value:val})});break;case"object":switch(key){case"style":for(const key in val){targets.forEach(target=>{target.style[key]=val[key]})}break;case"properties":if(!propertiesToSet){propertiesToSet=val}else{this.mergeDeep(propertiesToSet,val)}break;case"polymerProperties":if(!propertiesToSet)propertiesToSet={};for(const key in val){const polyProp=val[key];if(polyProp.value!==void 0){propertiesToSet[key]=polyProp.value}if(polyProp.observer!==void 0){targets.forEach(target=>{customElements.whenDefined(target.tagName.toLowerCase()).then(()=>{if(target._createPropertyObserver){target._createPropertyObserver(key,polyProp.observer,!0)}})})}}break;}break;}}}targets.forEach(target=>{if(target.setProperties){target.setProperties(propertiesToSet)}else{Object.assign(target,propertiesToSet)}})}applyStyle(styleTag,targets){if(!styleTag)return;targets.forEach(target=>{if(target.shadowRoot){const cn=styleTag.cloneNode(!0);target.shadowRoot.appendChild(cn)}})}waitForLater(){this._retries++;if(100<this._retries){console.error("XtalDecorator::waitForLater:  "+"Could not find the right targets "+this._CssSelector);return}setTimeout(()=>{this.evaluateCode()},100)}evaluateCode(){if(this._validateTargets&&!this._targetValidator){this.waitForLater();return}const targets=this.getTargets();if(!targets||targets.length<this._minElementCount){this.waitForLater();return}if(this._targetValidator){if(!this._targetValidator(targets,this)){this.waitForLater();return}}const templateTag=this.querySelector("template");let clone;if(templateTag){clone=document.importNode(templateTag.content,!0)}let scriptTag=this.querySelector("script");if(!scriptTag&&clone){scriptTag=clone.querySelector("script")}let styleTag=this.querySelector("style");if(!styleTag&&clone){styleTag=clone.querySelector("style")}if(!scriptTag&&!styleTag){console.error("XtalDecorator::evaluateCode:  "+"No script tag or style tag found to apply."+this._CssSelector);return}this.applyScript(scriptTag,targets);this.applyStyle(styleTag,targets)}connectedCallback(){this.evaluateCode()}mergeDeep(target,source){if("object"!==typeof target)return;if("object"!==typeof source)return;for(const key in source){const sourceVal=source[key],targetVal=target[key];if(!sourceVal)continue;if(!targetVal){target[key]=sourceVal;continue}if(Array.isArray(sourceVal)&&Array.isArray(targetVal)){if(0<targetVal.length&&"undefined"===typeof targetVal[0].id)continue;for(var i=0,ii=sourceVal.length;i<ii;i++){const srcEl=sourceVal[i];if("undefined"===typeof srcEl.id)continue;const targetEl=targetVal.find(function(el){return el.id===srcEl.id});if(targetEl){this.mergeDeep(targetEl,srcEl)}else{targetVal.push(srcEl)}}continue}switch(typeof sourceVal){case"object":switch(typeof targetVal){case"object":this.mergeDeep(targetVal,sourceVal);break;default:target[key]=sourceVal;break;}break;default:target[key]=sourceVal;}}return target}}customElements.define(XtalDecorator.is,XtalDecorator)})();