(function(){class a extends HTMLElement{constructor(){super(...arguments),this._CssSelector='dom-bind',this._minElementCount=1,this._retries=0}static get is(){return'xtal-decorator'}set validateTargets(a){a?this.setAttribute('validate-targets',''):this.removeAttribute('validate-targets')}set targetValidator(a){this._targetValidator=a}static get observedAttributes(){return['selector','min-element-count','validate-targets']}attributeChangedCallback(a,b,c){'selector'===a?this._CssSelector=c:'min-element-count'===a?this._minElementCount=parseInt(c):'validate-targets'===a?this._validateTargets=null!==c:void 0}disconnectedCallback(){this._domObserver.disconnect()}getShadowSubTargets(a,b){const c=[];return a.forEach((a)=>{const d=a.shadowRoot;if(d){const a=d.querySelectorAll(b),e=[].slice.call(a);e.forEach((a)=>c.push(a))}}),c}getHost(){for(let a=this.parentElement;a;){if(a.shadowRoot)return a;a=a.parentElement}}getTargets(){switch(this._CssSelector){case'_host':const a=this.getHost();return a?[a]:null;default:const b=this._CssSelector.split('>>>');let c=[].slice.call(this.parentElement.querySelectorAll(b[0]));for(let a=1,d=b.length;a<d;a++)c=this.getShadowSubTargets(c,b[a]);return c;}}applyScript(a,b){if(!a)return;const c=a.innerText;if(c===this._previousEvaluatedText)return;const d=eval(c);this._previousEvaluatedText=c;let e;for(let c=0,g=d.length;c<g;c++){const a=d[c];for(var f in a){const c=a[f];switch(typeof c){case'function':b.forEach((a)=>{Object.defineProperty(a,f,{enumerable:!1,configurable:!0,writable:!0,value:c})});break;case'object':switch(f){case'style':for(const a in c)b.forEach((b)=>{b.style[a]=c[a]});break;case'properties':e?this.mergeDeep(e,c):e=c;break;case'polymerProperties':for(const a in e||(e={}),c){const d=c[a];void 0!==d.value&&(e[a]=d.value),void 0!==d.observer&&b.forEach((b)=>{customElements.whenDefined(b.tagName.toLowerCase()).then(()=>{b._createPropertyObserver&&b._createPropertyObserver(a,d.observer,!0)})})}}}}}b.forEach((a)=>{a.setProperties?a.setProperties(e):Object.assign(a,e)})}applyStyle(a,b){a&&b.forEach((b)=>{if(b.shadowRoot){const c=a.cloneNode(!0);b.shadowRoot.appendChild(c)}})}waitForLater(){return this._retries++,100<this._retries?void console.error('XtalDecorator::waitForLater:  '+'Could not find the right targets '+this._CssSelector):void setTimeout(()=>{this.evaluateCode()},100)}evaluateCode(){if(this._validateTargets&&!this._targetValidator)return void this.waitForLater();const a=this.getTargets();if(!a||a.length<this._minElementCount)return void this.waitForLater();if(this._targetValidator&&!this._targetValidator(a,this))return void this.waitForLater();const b=this.querySelector('template');let c;b&&(c=document.importNode(b.content,!0));let d=this.querySelector('script');!d&&c&&(d=c.querySelector('script'));let e=this.querySelector('style');return!e&&c&&(e=c.querySelector('style')),d||e?void(this.applyScript(d,a),this.applyStyle(e,a)):void console.error('XtalDecorator::evaluateCode:  '+'No script tag or style tag found to apply.'+this._CssSelector)}connectedCallback(){this.evaluateCode()}mergeDeep(a,b){if('object'===typeof a&&'object'===typeof b){for(const e in b){const f=b[e],g=a[e];if(f){if(!g){a[e]=f;continue}if(Array.isArray(f)&&Array.isArray(g)){if(0<g.length&&'undefined'===typeof g[0].id)continue;for(var c=0,d=f.length;c<d;c++){const a=f[c];if('undefined'===typeof a.id)continue;const b=g.find(function(b){return b.id===a.id});b?this.mergeDeep(b,a):g.push(a)}continue}switch(typeof f){case'object':switch(typeof g){case'object':this.mergeDeep(g,f);break;default:a[e]=f;}break;default:a[e]=f;}}}return a}}}customElements.define(a.is,a)})();