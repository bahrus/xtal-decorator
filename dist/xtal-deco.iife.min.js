!function(){function define(e){let t=e.is;customElements.get(t)?console.warn("Already registered "+t):customElements.define(t,e)}const spKey="__xtal_deco_onPropsChange";class XtalDeco extends HTMLElement{static get is(){return"xtal-deco"}connectedCallback(){this.style.display="none",this.getElement("_nextSibling",e=>e.nextElementSibling),this.getElement("_script",e=>e.querySelector("script"))}attachBehavior(e,t){for(const n in e){const s=e[n];switch(n){case"on":for(const e in s){const n=e+"_decoHandler";Object.defineProperty(t,n,{enumerable:!1,configurable:!0,writable:!0,value:s[e]});t.addEventListener(e,t[n])}break;case"props":for(const e in s){const n=s[e];Object.defineProperty(t,e,{get:function(){return this["_"+e]},set:function(t){this["_"+e]=t;const n=new CustomEvent(e+"-changed",{detail:{value:t},bubbles:!0,composed:!1});this.dispatchEvent(n),this[spKey]&&this[spKey](e,t)},enumerable:!0,configurable:!0}),t[e]=n}break;case"setters":for(const e in s){const n=s[e];t[e]=n}break;default:switch(typeof s){case"function":const e="onPropsChange"===n?spKey:n;Object.defineProperty(t,e,{enumerable:!1,configurable:!0,writable:!0,value:s});break;case"object":t[n]=s}}}}getElement(e,t){this[e]=t(this),this[e]?this.onDecoPropsChange():setTimeout(()=>{this.getElement(e,t)})}evaluateCode(scriptElement,target){const evalObj=eval(scriptElement.innerHTML);this.attachBehavior(evalObj,target),this._nextSibling.removeAttribute("disabled")}onDecoPropsChange(){this._nextSibling&&this._script&&this.evaluateCode(this._script,this._nextSibling)}}define(XtalDeco)}();